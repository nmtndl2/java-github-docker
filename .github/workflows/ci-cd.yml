name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test with Maven
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven Packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and Test
        run: mvn -B clean package --file MicroService-webClient-docker/pom.xml

  docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push ApiGateway
        uses: docker/build-push-action@v4
        with:
          context: ./MicroService-webClient-docker/ApiGateway
          file: ./MicroService-webClient-docker/ApiGateway/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest

      - name: Build and Push ServiceRegistry
        uses: docker/build-push-action@v4
        with:
          context: ./MicroService-webClient-docker/ServiceRegistry
          file: ./MicroService-webClient-docker/ServiceRegistry/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/service-registry:latest

  deploy:
    name: Deploy with Docker Compose
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: |
          docker-compose -f ./docker-compose.yml down
          docker-compose -f ./docker-compose.yml pull
          docker-compose -f ./docker-compose.yml up -d
